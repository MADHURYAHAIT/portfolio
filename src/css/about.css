:root {
	--card-height: 43vw;
	--card-margin: 4vw;
	--card-top-offset: 1em;
	--numcards: 4;
	--outline-width: 0;
}

#cards {
	padding-bottom: calc(var(--numcards) * var(--card-top-offset)); /* Make place at bottom, as items will slide to that position*/
	margin-bottom: var(--card-margin); /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
}

#card_1 {
	--index: 1;
}

#card_2 {
	--index: 2;
}

#card_3 {
	--index: 3;
}

#card_4 {
	--index: 4;
}

@keyframes fadeInOut {
	0% {
	  opacity: 0;
	}
	100% {
	  opacity: 1;
	}
  }
  
.About{
	animation: fadeInOut 2s  alternate;
}

.Aboutcard {
	position: sticky;
	top: 0;
	padding-top: calc(var(--index) * var(--card-top-offset));
    background-color:transparent;
}

@supports (animation-timeline: works) {

		@scroll-timeline cards-element-scrolls-in-body {
		source: selector(body);
		scroll-offsets:
			/* Start when the start edge touches the top of the scrollport */
			selector(#cards) start 1,
			/* End when the start edge touches the start of the scrollport */
			selector(#cards) start 0;
		start: selector(#cards) start 1; /* Start when the start edge touches the top of the scrollport */
		end: selector(#cards) start 0; /* End when the start edge touches the start of the scrollport */
		time-range: 4s;
	}

	.card {
		--index0: calc(var(--index) - 1); /* 0-based index */
		--reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
		--reverse-index0: calc(var(--reverse-index) - 1); /* 0-based reverse index */
	}
	
	.card__content {
		transform-origin: 50% 0%;
		will-change: transform;
		--duration: calc(var(--reverse-index0) * 1s);
		--delay: calc(var(--index0) * 1s);
		animation: var(--duration) linear scale var(--delay) forwards;
		animation-timeline: cards-element-scrolls-in-body;
	}

	@keyframes scale {
		to {
			transform:
				scale(calc(1.1-calc(0.1 * var(--reverse-index))
				));
		}
	}
}

/** DEBUG **/

#debug {
  position: fixed;
  top: 1em;
  left: 1em;
}
#debug::after {
  content: " Show Debug";
  margin-left: 1.5em;
  color: white;
  white-space: nowrap;
}

#debug:checked ~ main {
  --outline-width: 1px;
}


/** PAGE STYLING **/

* { /* Poor Man's Reset */
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

.About {
	color: rgb(255, 255, 255);
	text-align: center;
	font-size: calc(1em + 0.5vw);
}

header,
main {
	width: 73vw;
	margin: 30px auto;
}
.scroldwn{
	padding-top: 250%;
}
header {
	height: 50vh;
	display: grid;
	place-items: center;
}

#cards {
	list-style: none;
	padding-top: 10%;
	outline: calc(var(--outline-width) * 10) solid blue;
	display: grid;
	grid-template-columns: 7fr;
	grid-template-rows: repeat(var(--numcards), var(--card-height));
	gap: var(--card-margin);
}

.card {
	outline: var(--outline-width) solid hotpink;
}

.card__content {
	box-shadow: 0 0.2em 5em rgba(0, 0, 0, 0.627), 0 1em 5em rgba(0, 0, 0, 0.592);
	background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255,255,255,0));
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
	color: rgb(255, 255, 255);
	border-radius:10px;
	/* font-size: 20px; */
	overflow: hidden;
	display: grid;
	grid-template-areas: "text img";
	grid-template-columns: 1fr 1fr;
	grid-template-rows: auto;
/* 	
    border: 1px solid #e30b0b;
    box-shadow: 0 0 65px rgba(255, 3, 3, 0.845); */
	align-items: stretch;
	outline: var(--outline-width) solid lime;
}

.card__content > div {
	grid-area: text;
	width: 80%;
	place-self: center;
	text-align: left;

	display: grid;
	gap: 1em;
	place-items: start;
}

.card__content > figure {
	grid-area: img;
    /* place-self: center; */
	overflow: hidden;
}

.card__content > figure > img {
	width: 580px;
	height: auto;
	object-fit: cover;
}

header h1 ,main h1{
	font-weight: 300;
	font-size: 4.7em;
}

.About  h2 {
	font-weight: 300;
	font-size: 2.0em;
    color: #e30b0b;
}

.About p {
	font-family: sans-serif;
	font-weight: 230;
	line-height: 1.52;
	font-size: 24px;
	scale: 0.8;
}

.btn {
	background: rgb(188 87 36);
	color: rgb(255 255 255);
	text-decoration: none;
	display: inline-block;
	padding: 0.5em;
	border-radius: 0.25em;
}

aside {
	width: 50vw;
	margin: 0 auto;
	margin-top: -300px;
	text-align: center;
}

aside p {
	margin-bottom: 0em;
}
